#!/bin/bash

set -e
cd "$(dirname $0)/.."

# Set up cross-compilation if needed

extra_flags=()

if [ -n "$TARGETARCH" ]; then
  echo "==> Setting flags for target arch '$TARGETARCH'"
  arch_name="$(Scripts/get-linux-arch-name $TARGETARCH)"

  # Workaround for https://github.com/stephencelis/CSQLite/pull/1
  if [ ! -f /usr/include/sqlite3.h ]; then
    ln -s {"$TARGETSYSROOT",}/usr/include/sqlite3.h
  fi

  # There seem to be some strange errors with <tgmath.h> (glibc)
  # on host + target x86_64. Since this header seems to be provided
  # elsewhere, we can remove it from the target sysroot as a workaround.
  if [ -n "$TARGETSYSROOT" ] && [ "$BUILDARCH" = amd64 ] && [ "$TARGETARCH" = amd64 ]; then
    rm "$TARGETSYSROOT/usr/include/tgmath.h"
  fi

  extra_flags+=(
    --arch "$arch_name"
    --sdk "$TARGETSYSROOT"
    -Xswiftc -use-ld=lld
    -Xswiftc -resource-dir -Xswiftc "$TARGETSYSROOT/usr/lib/swift"
    # TODO: Figure out which of these flags are redundant
    -Xcc -I"$TARGETSYSROOT/usr/include"
    -Xcc -I"$TARGETSYSROOT/usr/include/freetype2"
    -Xcc -I"$TARGETSYSROOT/usr/include/cairo"
    -Xlinker -L"$TARGETSYSROOT/usr/lib"
    -Xlinker -L"$TARGETSYSROOT/usr/lib/$arch_name-linux-gnu" # libtesseract installs there
  )
fi

echo "==> Building D2 with flags ${extra_flags[@]}"
exec swift build -c release "${extra_flags[@]}"
